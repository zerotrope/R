setwd("~/ACADEMICS/DSTI/19 - Survival Analysis")
library(ggplot2)
library(readr)
raw <-
read_tsv("hospitalization.csv",
col_types = cols(id = 'c',
dur = 'd',
age = 'd',
sex = 'c',
temp = 'd',
wbc = 'd',
antib = 'c',
cult = 'c',
serv = 'c'))
h <- within(raw, {
sex <- factor(sex, levels = c('1', '2'), labels = c('m', 'f'))
antib <- factor(antib, levels = c('2', '1'), labels = c('no', 'yes'))
cult <- factor(cult, levels = c('2', '1'), labels = c('no', 'yes'))
serv <- factor(serv, levels = c('1', '2'), labels = c('medical', 'surgical'))
temp <- (temp - 32.0) * 5/9  ## convert to Celsius
})
h <- subset(h, select = -id)
summary(h)
hist(h$dur)
Fn <- ecdf(h$dur)
summary(Fn)
plot(Fn)
hist(h$temp)
table(h$dur == 0)
prop.table(table(h$dur == 0))
with(h, binom.test(table(dur == 0)))
plot(dur ~ temp, data = h)
ggplot(h, aes(x = temp > 37, y = dur)) +
geom_boxplot()
with(h, table(temp > 37, dur > 0, deparse.level = 2))
with(h, prop.table(table(temp > 37, dur > 0), 1))
ggplot(h, aes(x = cult, y = dur)) +
geom_boxplot()
with(h, table(cult, dur > 0, deparse.level =2))
with(h, prop.table(table(cult, dur > 0), 1))
h$y <- h$dur > 0
mean_temperature <- mean(h$temp)
h$x <- h$temp - mean_temperature
logLik <- function(theta) {
alpha <- theta[1]
beta <- theta[2]
linear_predictor <- alpha + beta * h$x
probabilities <- plogis(linear_predictor)
log_terms <- dbinom(h$y,
size = 1,
prob = probabilities,
log = TRUE)
sum(log_terms)
}
debugonce(logLik)
logLik(c(3, 3))
probabilities
install.packages("maxLik")
library(maxLik)
fit <- maxLik(logLik, start = c(alpha = 0, beta = 0))
summary(fit)
fit2 <- glm(y ~ x, data = h, family = 'binomial')
summary(fit2)
predict(fit2,
newdata = data.frame(x = 38 - mean_temperature),
type = "response")
predict(fit2,
newdata = data.frame(x = 38 - mean_temperature),
type = "link")
help(set.seed)
help(rexp)
set.seed(1234)
rate <- 0.2
y <- rexp(100, rate = rate)
mean(y)
1/rate
median(y)
log(2)/rate
F <- ecdf(y)
plot(F)
curve(pexp(x, rate = rate), col = "red", add = TRUE)
S <- function(t) 1 - F(t)
curve(S(x), from = 0, to = 30)
curve(pexp(x, rate = rate, lower.tail = FALSE), col = "red", add = TRUE)
f <- density(y, from = 0)
curve(dexp(x, rate = rate), col = "red", from = 0, to = 25)
lines(f)
h_empirical <- f$y / S(f$x)
plot(f$x, h_empirical, type = "l")
abline(h = rate, col = "red")
clog_empirical <- -log(S(f$x))
plot(f$x, clog_empirical, type = "l")
abline(a = 0, b = rate, col = "red")
logLik <- function(logRate) {
sum(dexp(y, rate = exp(logRate), log = TRUE))
}
f <- Vectorize(logLik)
curve(f(x), from = -3, to = 0)
library(maxLik)
fit <- maxLik(f, start = c(logRate = 0))
summary(fit)
rate_MLE_numerical <- unname(exp(fit$estimate))
rate_MLE_numerical
library(ggplot2)
library(readr)
raw <-
read_tsv("hospitalization.csv",
col_types = cols(id = 'c',
dur = 'd',
age = 'd',
sex = 'c',
temp = 'd',
wbc = 'd',
antib = 'c',
cult = 'c',
serv = 'c'))
h <- within(raw, {
sex <- factor(sex, levels = c('1', '2'), labels = c('m', 'f'))
antib <- factor(antib, levels = c('2', '1'), labels = c('no', 'yes'))
cult <- factor(cult, levels = c('2', '1'), labels = c('no', 'yes'))
serv <- factor(serv, levels = c('1', '2'), labels = c('medical', 'surgical'))
temp <- (temp - 32.0) * 5/9  ## convert to Celsius
})
h <- subset(h, select = -id)
summary(h)
hist(h$dur)
Fn <- ecdf(h$dur)
summary(Fn)
plot(Fn)
hist(h$temp)
table(h$dur == 0)
prop.table(table(h$dur == 0))
with(h, binom.test(table(dur == 0)))
plot(dur ~ temp, data = h)
ggplot(h, aes(x = temp > 37, y = dur)) +
geom_boxplot()
with(h, table(temp > 37, dur > 0, deparse.level = 2))
with(h, prop.table(table(temp > 37, dur > 0), 1))
ggplot(h, aes(x = cult, y = dur)) +
geom_boxplot()
with(h, table(cult, dur > 0, deparse.level =2))
with(h, prop.table(table(cult, dur > 0), 1))
h$y <- h$dur > 0
mean_temperature <- mean(h$temp)
h$x <- h$temp - mean_temperature
logLik <- function(theta) {
alpha <- theta[1]
beta <- theta[2]
linear_predictor <- alpha + beta * h$x
probabilities <- plogis(linear_predictor)
log_terms <- dbinom(h$y,
size = 1,
prob = probabilities,
log = TRUE)
sum(log_terms)
}
debugonce(logLik)
logLik(c(3, 3))
library(maxLik)
fit <- maxLik(logLik, start = c(alpha = 0, beta = 0))
summary(fit)
fit2 <- glm(y ~ x, data = h, family = 'binomial')
summary(fit2)
predict(fit2,
newdata = data.frame(x = 38 - mean_temperature),
type = "response")
predict(fit2,
newdata = data.frame(x = 38 - mean_temperature),
type = "link")
set.seed(1234)
rate <- 0.2
y <- rexp(100, rate = rate)
mean(y)
1/rate
median(y)
log(2)/rate
F <- ecdf(y)
plot(F)
curve(pexp(x, rate = rate), col = "red", add = TRUE)
S <- function(t) 1 - F(t)
curve(S(x), from = 0, to = 30)
curve(pexp(x, rate = rate, lower.tail = FALSE), col = "red", add = TRUE)
f <- density(y, from = 0)
curve(dexp(x, rate = rate), col = "red", from = 0, to = 25)
lines(f)
h_empirical <- f$y / S(f$x)
plot(f$x, h_empirical, type = "l")
abline(h = rate, col = "red")
clog_empirical <- -log(S(f$x))
plot(f$x, clog_empirical, type = "l")
abline(a = 0, b = rate, col = "red")
logLik <- function(logRate) {
sum(dexp(y, rate = exp(logRate), log = TRUE))
}
f <- Vectorize(logLik)
curve(f(x), from = -3, to = 0)
library(maxLik)
fit <- maxLik(f, start = c(logRate = 0))
summary(fit)
rate_MLE_numerical <- unname(exp(fit$estimate))
rate_MLE_numerical
c(theoretical = 1/rate,
empirical = mean(y),
MLE_numerical = 1/rate_MLE_numerical)
c(theoretical = log(2) / rate,
empirical = median(y),
MLE_numerical = log(2) / rate_MLE_numerical)
Fn <- ecdf(y)
S_empirical <- function(t) 1.0 - Fn(t)
S_MLE_numerical <- function(t) pexp(t, rate = rate_MLE_numerical, lower.tail = FALSE)
S_theoretical <- function(t) pexp(t, rate = rate, lower.tail = FALSE)
curve(S_empirical, from = 0, to = 40)
curve(S_MLE_numerical, col = "blue", add = TRUE)
curve(S_theoretical, col = "red", add = TRUE)
getwd()
set.seed(1234)
rate <- 0.2
y <- rexp(100, rate = rate)
mean(y)
1/rate
median(y)
log(2)/rate
F <- ecdf(y)
plot(F)
curve(pexp(x, rate = rate), col = "red", add = TRUE)
S <- function(t) 1 - F(t)
curve(S(x), from = 0, to = 30)
curve(pexp(x, rate = rate, lower.tail = FALSE), col = "red", add = TRUE)
f <- density(y, from = 0)
curve(dexp(x, rate = rate), col = "red", from = 0, to = 25)
lines(f)
h_empirical <- f$y / S(f$x)
plot(f$x, h_empirical, type = "l")
abline(h = rate, col = "red")
clog_empirical <- -log(S(f$x))
plot(f$x, clog_empirical, type = "l")
abline(a = 0, b = rate, col = "red")
logLik <- function(logRate) {
sum(dexp(y, rate = exp(logRate), log = TRUE))
}
f <- Vectorize(logLik)
curve(f(x), from = -3, to = 0)
library(maxLik)
fit <- maxLik(f, start = c(logRate = 0))
summary(fit)
rate_MLE_numerical <- unname(exp(fit$estimate))
rate_MLE_numerical
c(theoretical = 1/rate,
empirical = mean(y),
MLE_numerical = 1/rate_MLE_numerical)
c(theoretical = log(2) / rate,
empirical = median(y),
MLE_numerical = log(2) / rate_MLE_numerical)
Fn <- ecdf(y)
S_empirical <- function(t) 1.0 - Fn(t)
S_MLE_numerical <- function(t) pexp(t, rate = rate_MLE_numerical, lower.tail = FALSE)
S_theoretical <- function(t) pexp(t, rate = rate, lower.tail = FALSE)
curve(S_empirical, from = 0, to = 40)
curve(S_MLE_numerical, col = "blue", add = TRUE)
curve(S_theoretical, col = "red", add = TRUE)
h_theoretical <- Vectorize(function(t) rate)
h_MLE_numerical <- Vectorize(function(t) rate_MLE_numerical)
curve(h_theoretical, from = 0, to = 40, col = "red",
xlab = "time", ylab = "hazard")
curve(h_MLE_numerical, col = "blue", add = TRUE)
library(ggplot2)
library(readr)
raw <-
read_tsv("hospitalization.csv",
col_types = cols(id = 'c',
dur = 'd',
age = 'd',
sex = 'c',
temp = 'd',
wbc = 'd',
antib = 'c',
cult = 'c',
serv = 'c'))
h <- within(raw, {
sex <- factor(sex, levels = c('1', '2'), labels = c('m', 'f'))
antib <- factor(antib, levels = c('2', '1'), labels = c('no', 'yes'))
cult <- factor(cult, levels = c('2', '1'), labels = c('no', 'yes'))
serv <- factor(serv, levels = c('1', '2'), labels = c('medical', 'surgical'))
temp <- (temp - 32.0) * 5/9  ## convert to Celsius
})
h <- subset(h, select = -id)
logLik <- function(logRate) {
sum(dexp(h$dur, rate = exp(logRate), log = TRUE))
}
fit <- maxLik(logLik, start = 0)
summary(fit)
logLik <- function(theta) {
alpha <- theta[1]
beta <- theta[2]
terms <- dexp(h$dur,
rate = exp(alpha + beta * h$temp),
log = TRUE)
sum(terms)
}
fit <- maxLik(logLik, start = c(alpha = 0, beta = 0))
summary(fit)
logLik <- function(theta) {
alpha <- theta[1]
beta <- theta[2]
terms <- dexp(h$dur,
rate = exp(alpha + beta * (h$temp - 36)),
log = TRUE)
sum(terms)
}
fit <- maxLik(logLik, start = c(alpha = 0, beta = 0))
summary(fit)
curve(pexp(5.0,
rate = exp(fit$estimate[1] + fit$estimate[2] * x),
lower.tail = FALSE),
from = 36, to = 38,
xlab = "body temperature (C)",
ylab = "P(T > 5 | temperature)")
curve(pexp(5.0,
rate = exp(fit$estimate[1] + fit$estimate[2] * x),
lower.tail = FALSE),
from = 0, to = 2,
xlab = "body temperature (C) - 36 (centered)",
ylab = "P(T > 5 | temperature)")
h_low <- subset(h, 36 <= temp & temp <= 37)
h_high <- subset(h, 37 < temp & temp <= 38)
clog <- function(y) {
function(t) {
S <- 1.0 - ecdf(y)(t)
-log(S)
}
}
curve(clog(h_low$dur)(x),
from = 0, to = 30, col = "blue",
xlab = "time (days)",
ylab = "-log(S(t))")
abline(a = 0, b = exp(fit$estimate[1] + fit$estimate[2] * (36.5 - 36)),
col = 'blue', lty = 2)
curve(clog(h_high$dur)(x),
from = 0, to = 30, col = "red", add = TRUE)
abline(a = 0, b = exp(fit$estimate[1] + fit$estimate[2] * (37.5 - 36)),
col = 'red', lty = 2)
summary(m)
m <- lm(dur ~temp, data = h)
summary(m)
m <- lm(log(dur+1) ~ temp, data = h)
summary(m)
plot(dur ~temp, data = h)
plot(log(dur+1) ~temp, data = h)
abline(coef(m))
abline(coef(m))
plot.new
plot(log(dur+1) ~temp, data = h)
plot.new
abline(coef(m))
plot(log(dur+1) ~temp, data = h)
abline(coef(m))
m <- lm(log(dur+1) ~ temp + age, data = h)
summary(m)
m <- lm(log(dur+1) ~ temp + age, data = h)
summary(m)
m <- glm(log(dur+1) ~ temp + age, data = h, family = 'binomial')
m <- glm(dur ~ temp + age, data = h, family = 'binomial')
m <- lm(dur ~ temp + age, data = h)
summary(m)
m <- glm(I(dur > 0) ~ temp + age, data = h, family = 'binomial')
summary(m)
plogis(-271)
mean_temp <- mean(temp)
temp
x
h$temp
mean_temp <- mean(h$temp)
mean_age <- mean(h$age)
getwd()
install.packages("asaur")
