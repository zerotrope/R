summary(fit.train.linear)
actual <- as.numeric(c(validate$trt))
predicted <- c(predict.linear)
str(actual)
str(predict.linear)
str(predicted.linear)
actual <- as.numeric(c(validate$trt))
predicted <- c(predict.linear)
str(actual)
str(predict.linear)
str(predicted)
library(ggplot2)
library(readr)
library(glmnet)
library(survival)
?pbc
#head(pbc)
#summary(pbc)
#hist(pbc$stage)
#table(pbc$stage)
# assign data set to a labelled object
data <- pbc
# create event parameter corresponding to death of the patient
data$event <- 0 + (data$status == 2)
data$trt <- factor(data$trt)
data$status <- factor(data$status)
data$stage <- factor(data$stage)
data$ascites <- factor(data$ascites)
data$edema <- factor(data$edema)
data$spiders <- factor(data$spiders)
hist(data$age)
data$ageGroup <- cut(data$age, breaks = c(0,10,20,30,40,50,60,70,80,90,Inf))
table(data$ageGroup)
# cholesterol
fit.chol <- (lm(chol ~ age, data = data))
data$chol[is.na(data$chol)] <-
predict(fit.chol, newdata = subset(data, is.na(chol)))
# copper
fit.copper <- (lm(copper ~ age, data = data))
data$copper[is.na(data$copper)] <-
predict(fit.copper, newdata = subset(data, is.na(copper)))
# trig
fit.trig <- (lm(trig ~ age, data = data))
data$trig[is.na(data$trig)] <-
predict(fit.trig, newdata = subset(data, is.na(trig)))
# platelet
fit.platelet <- (lm(platelet ~ age, data = data))
data$platelet[is.na(data$platelet)] <-
predict(fit.platelet, newdata = subset(data, is.na(platelet)))
# check if NAs have been properly predicted
summary(data)
# set the split proportion between train & validate sets, here 70% & 30% respectively
share = c(train = .7, validate = .3)
# create split function
g = sample(cut(
seq(nrow(subset(data, data$trt != "NA"))),
nrow(subset(data, data$trt != "NA"))*cumsum(c(0,share)),
labels = names(share)
))
# apply split function on treated patients data set
protocol = split(subset(data, data$trt != "NA"), g)
# assign each set to clearly labelled objects
train <- protocol$train
validate <- protocol$validate
test <- subset(data, is.na(data$trt))
# check if split properly
addmargins(prop.table(table(g)))
fit.train.linear <- (lm(event ~ trt, data = train))
predict.linear <- as.numeric(predict(fit.train.linear, newdata = validate))
summary(fit.train.linear)
actual <- as.numeric(c(validate$trt))
predicted <- c(predict.linear)
str(actual)
str(predict.linear)
str(predicted)
mape <- function(y, yhat)
{
mean(abs((y - yhat)/y)*100)
}
predict.linear.mape <- mape(actual, predict)
mape <- function(y, yhat)
{
mean(abs((y - yhat)/y)*100)
}
predict.linear.mape <- mape(actual, predict.linear)
fit.train.logistic <- glm(event ~ trt, data = train, family = 'binomial')
predict.logistic <- as.numeric(predict(fit.train.logistic, newdata = validate))
summary(fit.train.logistic)
predict.logistic.mape <- mape(actual, predict.logistic)
predict.linear.Rsquared <- summary(fit.train.linear)$r.squared
predict.linear.Rsquared <- summary(fit.train.linear)$r.squared
predict.linear.AdjRsquared <- summary(fit.train.linear)$adj.r.squared
library(ggplot2)
library(readr)
library(glmnet)
library(survival)
?pbc
#head(pbc)
#summary(pbc)
#hist(pbc$stage)
#table(pbc$stage)
# assign data set to a labelled object
data <- pbc
# create event parameter corresponding to death of the patient
data$event <- 0 + (data$status == 2)
data$trt <- factor(data$trt)
data$status <- factor(data$status)
data$stage <- factor(data$stage)
data$ascites <- factor(data$ascites)
data$edema <- factor(data$edema)
data$spiders <- factor(data$spiders)
hist(data$age)
data$ageGroup <- cut(data$age, breaks = c(0,10,20,30,40,50,60,70,80,90,Inf))
table(data$ageGroup)
# cholesterol
fit.chol <- (lm(chol ~ age, data = data))
data$chol[is.na(data$chol)] <-
predict(fit.chol, newdata = subset(data, is.na(chol)))
# copper
fit.copper <- (lm(copper ~ age, data = data))
data$copper[is.na(data$copper)] <-
predict(fit.copper, newdata = subset(data, is.na(copper)))
# trig
fit.trig <- (lm(trig ~ age, data = data))
data$trig[is.na(data$trig)] <-
predict(fit.trig, newdata = subset(data, is.na(trig)))
# platelet
fit.platelet <- (lm(platelet ~ age, data = data))
data$platelet[is.na(data$platelet)] <-
predict(fit.platelet, newdata = subset(data, is.na(platelet)))
# check if NAs have been properly predicted
summary(data)
# set the split proportion between train & validate sets, here 70% & 30% respectively
share = c(train = .7, validate = .3)
# create split function
g = sample(cut(
seq(nrow(subset(data, data$trt != "NA"))),
nrow(subset(data, data$trt != "NA"))*cumsum(c(0,share)),
labels = names(share)
))
# apply split function on treated patients data set
protocol = split(subset(data, data$trt != "NA"), g)
# assign each set to clearly labelled objects
train <- protocol$train
validate <- protocol$validate
test <- subset(data, is.na(data$trt))
# check if split properly
addmargins(prop.table(table(g)))
fit.train.linear <- (lm(event ~ trt, data = train))
validate.linear <- as.numeric(predict(fit.train.linear, newdata = validate))
summary(fit.train.linear)
validate.linear.Rsquared <- summary(fit.train.linear)$r.squared
validate.linear.AdjRsquared <- summary(fit.train.linear)$adj.r.squared
actual <- as.numeric(c(validate$trt))
str(actual)
str(validate.linear)
mape <- function(y, yhat)
{
mean(abs((y - yhat)/y))
}
validate.linear.mape <- mape(actual, validate.linear)
library(ggplot2)
library(readr)
library(glmnet)
library(survival)
?pbc
#head(pbc)
#summary(pbc)
#hist(pbc$stage)
#table(pbc$stage)
# assign data set to a labelled object
data <- pbc
# create event parameter corresponding to death of the patient
data$event <- 0 + (data$status == 2)
data$trt <- factor(data$trt)
data$status <- factor(data$status)
data$stage <- factor(data$stage)
data$ascites <- factor(data$ascites)
data$edema <- factor(data$edema)
data$spiders <- factor(data$spiders)
hist(data$age)
data$ageGroup <- cut(data$age, breaks = c(0,10,20,30,40,50,60,70,80,90,Inf))
table(data$ageGroup)
# cholesterol
fit.chol <- (lm(chol ~ age, data = data))
data$chol[is.na(data$chol)] <-
predict(fit.chol, newdata = subset(data, is.na(chol)))
# copper
fit.copper <- (lm(copper ~ age, data = data))
data$copper[is.na(data$copper)] <-
predict(fit.copper, newdata = subset(data, is.na(copper)))
# trig
fit.trig <- (lm(trig ~ age, data = data))
data$trig[is.na(data$trig)] <-
predict(fit.trig, newdata = subset(data, is.na(trig)))
# platelet
fit.platelet <- (lm(platelet ~ age, data = data))
data$platelet[is.na(data$platelet)] <-
predict(fit.platelet, newdata = subset(data, is.na(platelet)))
# check if NAs have been properly predicted
summary(data)
# set the split proportion between train & validate sets, here 70% & 30% respectively
share = c(train = .7, validate = .3)
# create split function
g = sample(cut(
seq(nrow(subset(data, data$trt != "NA"))),
nrow(subset(data, data$trt != "NA"))*cumsum(c(0,share)),
labels = names(share)
))
# apply split function on treated patients data set
protocol = split(subset(data, data$trt != "NA"), g)
# assign each set to clearly labelled objects
train <- protocol$train
validate <- protocol$validate
test <- subset(data, is.na(data$trt))
# check if split properly
addmargins(prop.table(table(g)))
fit.train.linear <- (lm(event ~ trt, data = train))
validate.linear <- as.numeric(predict(fit.train.linear, newdata = validate))
summary(fit.train.linear)
validate.linear.Rsquared <- summary(fit.train.linear)$r.squared
validate.linear.AdjRsquared <- summary(fit.train.linear)$adj.r.squared
actual <- as.numeric(c(validate$trt))
str(actual)
str(validate.linear)
mape <- function(y, yhat)
{
mean(abs((y - yhat)/y))
}
validate.linear.mape <- mape(actual, validate.linear)
fit.train.logistic <- glm(event ~ trt, data = train, family = 'binomial')
validate.logistic <- as.numeric(predict(fit.train.logistic, newdata = validate))
summary(fit.train.logistic)
validate.logistic.mape <- mape(actual, predict.logistic)
validate.logistic.mape <- mape(actual, validate.logistic)
validate.logistic.Rsquared <- summary(fit.train.logistic)$r.squared
validate.logistic.AdjRsquared <- summary(fit.train.logistic)$adj.r.squared
test
head(test)
?pbc
pbc$status==1
count(pbc$status==1)
table(pbc$status==1)
table(pbc$status==1, pbc$trt=="NA")
?subset
?pbc
library(ggplot2)
library(readr)
library(glmnet)
library(survival)
?pbc
#head(pbc)
#summary(pbc)
#hist(pbc$stage)
#table(pbc$stage)
# assign data set to a labelled object
data <- pbc
# create event parameter corresponding to death of the patient
data$event <- 0 + (data$status == 2)
data$trt <- factor(data$trt)
data$status <- factor(data$status)
data$stage <- factor(data$stage)
data$ascites <- factor(data$ascites)
data$edema <- factor(data$edema)
data$spiders <- factor(data$spiders)
hist(data$age)
data$ageGroup <- cut(data$age, breaks = c(0,10,20,30,40,50,60,70,80,90,Inf))
table(data$ageGroup)
# cholesterol
fit.chol <- (lm(chol ~ age, data = data))
data$chol[is.na(data$chol)] <-
predict(fit.chol, newdata = subset(data, is.na(chol)))
# copper
fit.copper <- (lm(copper ~ age, data = data))
data$copper[is.na(data$copper)] <-
predict(fit.copper, newdata = subset(data, is.na(copper)))
# trig
fit.trig <- (lm(trig ~ age, data = data))
data$trig[is.na(data$trig)] <-
predict(fit.trig, newdata = subset(data, is.na(trig)))
# platelet
fit.platelet <- (lm(platelet ~ age, data = data))
data$platelet[is.na(data$platelet)] <-
predict(fit.platelet, newdata = subset(data, is.na(platelet)))
# check if NAs have been properly predicted
summary(data)
specimen <- subset(data, data$trt != "NA", data$trt != 1)
specimen <- subset(data, data$trt != "NA" & data$trt != 1)
View(specimen)
specimen <- subset(data, data$trt != "NA" && data$trt != 1)
specimen <- subset(data, data$trt != "NA" && data$status != 1)
specimen <- subset(data, data$trt != "NA" & data$status != 1)
View(specimen)
summary(specimen)
survival <- Surv(train$time / 30.5, train$event)
survival <- Surv(specimen$time / 30.5, specimen$event)
survival
survival <- Surv(specimen$time / 30.5, specimen$event)
head(specimen)
survival <- Surv(specimen$time / 30.5, specimen$event)
head(survival)
KM <- survfit(survival ~ 1, data = specimen)
plot(KM)
survival <- Surv(specimen$time / 365.25, specimen$event)
KM <- survfit(survival ~ 1, data = specimen)
plot(KM)
KM <- survfit(survival ~ 1, data = specimen)
KM
plot(KM)
KM <- survfit(survival ~ 1, data = specimen)
KM
plot(KM, xlab="Survival Years", ylab="Kaplan-Meyer Estimator")
MH <- survdiff(survival ~ specimen$trt)
MH
plot(MH)
MH <- survdiff(survival ~ specimen$trt)
MH
#plot(MH)
fit.coxph.days <- coxph(survdays  ~ age + edema + log(bili) + log(albumin) + log(protime), data = train)
fit.coxph <- coxph(survival  ~ age + edema + log(bili) + log(albumin) + log(protime), data = specimen)
summary(fit.coxph)
fit.coxph.test <- coxph(survival ~ ., data = specimen)
#fit.coxph <- coxph(survival  ~ age + edema + log(bili) + log(albumin) + log(protime), data = specimen)
#summary(fit.coxph)
summary(fit.coxph.test)
plot(specimen$bili)
plot(specimen$log(bili))
plot(log(specimen$bili))
plot(specimen$bili)
plot(log(specimen$albumin))
plot(specimen$albumin)
plot(log(specimen$protime))
plot(specimen$protime)
library(ggplot2)
library(readr)
library(glmnet)
library(survival)
?pbc
#head(pbc)
#summary(pbc)
#hist(pbc$stage)
#table(pbc$stage)
# assign data set to a labelled object
data <- pbc
# create event parameter corresponding to death of the patient
data$event <- 0 + (data$status == 2)
data$trt <- factor(data$trt)
data$status <- factor(data$status)
data$stage <- factor(data$stage)
data$ascites <- factor(data$ascites)
data$edema <- factor(data$edema)
data$spiders <- factor(data$spiders)
hist(data$age)
data$ageGroup <- cut(data$age, breaks = c(0,10,20,30,40,50,60,70,80,90,Inf))
table(data$ageGroup)
# cholesterol
fit.chol <- (lm(chol ~ age, data = data))
data$chol[is.na(data$chol)] <-
predict(fit.chol, newdata = subset(data, is.na(chol)))
# copper
fit.copper <- (lm(copper ~ age, data = data))
data$copper[is.na(data$copper)] <-
predict(fit.copper, newdata = subset(data, is.na(copper)))
# trig
fit.trig <- (lm(trig ~ age, data = data))
data$trig[is.na(data$trig)] <-
predict(fit.trig, newdata = subset(data, is.na(trig)))
# platelet
fit.platelet <- (lm(platelet ~ age, data = data))
data$platelet[is.na(data$platelet)] <-
predict(fit.platelet, newdata = subset(data, is.na(platelet)))
# check if NAs have been properly predicted
summary(data)
specimen <- subset(data, data$trt != "NA" & data$status != 1)
summary(specimen)
survival <- Surv(specimen$time / 365.25, specimen$event)
KM <- survfit(survival ~ 1, data = specimen)
KM
plot(KM, xlab="Survival Years", ylab="Kaplan-Meyer Estimator")
MH <- survdiff(survival ~ specimen$trt)
MH
#plot(MH)
#fit.coxph.test <- coxph(survival ~ ., data = specimen)
fit.coxph <- coxph(survival  ~ age + edema + hepato + platelet + sex + spiders + ascites + log(albumin) + log(alk.phos) + log(ast) + log(bili) + log(chol) + log(copper) + log(trig) + log(protime), data = specimen)
summary(fit.coxph)
#summary(fit.coxph.test)
specimen.null<-data.frame(age=rep(0,1), edema=rep(0,1), bili=rep(1,1), albumin=rep(1,1),protime=rep(1,1))
#plot(survfit(fit.coxph.days, newdata=data.null), lwd=2,ylim=c(.99,1), main='baseline survivor', xlab='Days', ylab='Survival', conf.int=T)
#plot(survfit(fit.coxph.months, newdata=data.null), lwd=2,ylim=c(.99,1), main='baseline survivor', xlab='Months', ylab='Survival', conf.int=T)
plot(survfit(fit.coxph),lwd=2,main= 'fitted survival function at mean covariates', xlab='Years', ylab='Survival')
specimen.null<-data.frame(age=rep(0,1), edema=rep(0,1), bili=rep(1,1), albumin=rep(1,1),protime=rep(1,1))
plot(survfit(fit.coxph, newdata=specimen.null), lwd=2,ylim=c(.99,1), main='baseline survivor', xlab='Years', ylab='Survival', conf.int=T)
fit.coxph2 <- coxph(survival  ~ age + edema + log(albumin) + log(bili) + log(copper) + log(protime), data = specimen)
specimen.null<-data.frame(age=rep(0,1), edema=rep(0,1), bili=rep(1,1), albumin=rep(1,1),protime=rep(1,1))
plot(survfit(fit.coxph2, newdata=specimen.null), lwd=2,ylim=c(.99,1), main='baseline survivor', xlab='Years', ylab='Survival', conf.int=T)
fit.coxph2 <- coxph(survival  ~ age + edema + log(albumin) + log(bili) + log(copper) + log(protime), data = specimen)
specimen.null<-data.frame(age=rep(0,1), edema=rep(0,1), bili=rep(1,1), albumin=rep(1,1), protime=rep(1,1), copper=rep(1,1))
plot(survfit(fit.coxph2, newdata=specimen.null), lwd=2,ylim=c(.99,1), main='baseline survivor', xlab='Years', ylab='Survival', conf.int=T)
fit.coxph2 <- coxph(survival  ~ age + edema + log(albumin) + log(bili) + log(protime), data = specimen)
specimen.null<-data.frame(age=rep(0,1), edema=rep(0,1), bili=rep(1,1), albumin=rep(1,1), protime=rep(1,1))
plot(survfit(fit.coxph2, newdata=specimen.null), lwd=2,ylim=c(.99,1), main='baseline survivor', xlab='Years', ylab='Survival', conf.int=T)
setwd("~/ACADEMICS/DSTI/19 - Survival Analysis/Project")
load(survival)
library(survival)
?ovarian
library(ggplot2)
library(survminer)
library(readr)
library(glmnet)
library(survival)
?pbc
#head(pbc)
#summary(pbc)
#hist(pbc$stage)
#table(pbc$stage)
# assign data set to a labelled object
data <- pbc
# create event parameter corresponding to death of the patient
data$event <- 0 + (data$status == 2)
data$trt <- factor(data$trt)
data$status <- factor(data$status)
data$stage <- factor(data$stage)
data$ascites <- factor(data$ascites)
data$edema <- factor(data$edema)
data$spiders <- factor(data$spiders)
hist(data$age)
data$ageGroup <- cut(data$age, breaks = c(0,10,20,30,40,50,60,70,80,90,Inf))
table(data$ageGroup)
# cholesterol
fit.chol <- (lm(chol ~ age, data = data))
data$chol[is.na(data$chol)] <-
predict(fit.chol, newdata = subset(data, is.na(chol)))
# copper
fit.copper <- (lm(copper ~ age, data = data))
data$copper[is.na(data$copper)] <-
predict(fit.copper, newdata = subset(data, is.na(copper)))
# trig
fit.trig <- (lm(trig ~ age, data = data))
data$trig[is.na(data$trig)] <-
predict(fit.trig, newdata = subset(data, is.na(trig)))
# platelet
fit.platelet <- (lm(platelet ~ age, data = data))
data$platelet[is.na(data$platelet)] <-
predict(fit.platelet, newdata = subset(data, is.na(platelet)))
# check if NAs have been properly predicted
summary(data)
specimen <- subset(data, data$trt != "NA" & data$status != 1)
summary(specimen)
survival <- Surv(specimen$time / 365.25, specimen$event)
KM <- survfit(survival ~ 1, data = specimen)
KM
ggsurvplot(KM, xlab="Survival Years", ylab="Kaplan-Meyer Estimator")
KM <- survfit(survival ~ 1, data = specimen)
KM
ggsurvplot(KM, xlab="Survival Years", ylab="Kaplan-Meyer Estimator", pval=TRUE)
KM <- survfit(survival ~ 1, data = specimen)
KM
ggsurvplot(KM, xlab="Survival Years", ylab="Kaplan-Meyer Estimator")
# fitting the survival to treatment parameter
fit.trt <- survfit(survival ~ trt, data = specimen)
## visualizing the survival probability
ggsurvplot(fit.trt,
data = specimen,
xlab = "Years",
conf.int = FALSE,
pval = TRUE,
legend = "top",
legend.title = "Sex",
legend.labs = c("Male", "Female"))
## visualizing the cumulative event
ggsurvplot(fit.trt,
data = specimen,
xlab = "Years",
fun = "event",
legend = "top",
legend.title = "Sex",
legend.labs = c("Male", "Female"))
## visualizing the cumulative hazard
ggsurvplot(fit.trt,
data = specimen,
xlab = "Years",
fun = "cumhaz",
legend = "top",
legend.title = "Sex",
legend.labs = c("Male", "Female"))
# fitting the survival to sex parameter
fit.sex <- survfit(survival ~ sex, data = specimen)
## visualizing the survival probability
ggsurvplot(fit.sex,
data = specimen,
xlab = "Years",
conf.int = FALSE,
pval = TRUE,
legend = "top",
legend.title = "Sex",
legend.labs = c("Male", "Female"))
## visualizing the cumulative event
ggsurvplot(fit.sex,
data = specimen,
xlab = "Years",
fun = "event",
legend = "top",
legend.title = "Sex",
legend.labs = c("Male", "Female"))
## visualizing the cumulative hazard
ggsurvplot(fit.sex,
data = specimen,
xlab = "Years",
fun = "cumhaz",
legend = "top",
legend.title = "Sex",
legend.labs = c("Male", "Female"))
